name: 'Terraform'
on:
  push:
    branches:
    - "main"
  pull_request:

permissions:
  contents: read
  id-token: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    
    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
#       with: 
#          terraform_version: ${{ env.TERRAFORM_VERSION }}
    #         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform init
      run: |
        cd terraform-code
        terraform init
    - name: Terraform validate
      run: |
        cd terraform-code
        terraform validate
    - name: "terraform: plan"
      run: |
        cd terraform-code
        terraform plan
    - name: "terraform: apply"
      run: |
        cd terraform-code
        terraform apply --auto-approve
    - name: AWS CodeDeploy
      uses: sourcetoad/aws-codedeploy-action@v1
      with:
        codedeploy_name: example-codedeploy_app
        codedeploy_group: example-codedeploy_deployment_group
